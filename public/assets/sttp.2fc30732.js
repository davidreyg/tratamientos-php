import{p as s,b as u,s as d,a as p,T as m,F as $}from"./index.5981ee4f.js";var c={default:"${path} no es v\xE1lido.",required:"${path} es un campo requerido",defined:"${path} debe definirse",notNull:"${path} no puede ser nulo",oneOf:"${path} debe ser uno de los siguientes valores: ${values}",notOneOf:"${path} no debe ser uno de los siguientes valores: ${values}",notType:function(e){var a=e.path,l=e.type,r=e.value,t=e.originalValue,i=t!=null&&t!==r,o=a+" debe ser un `"+l+"` Tipo, "+("Pero el valor final fue: `"+s(r,!0)+"`")+(i?" (Eche el valor `"+s(t,!0)+"`).":".");return r===null&&(o+='\n Si "nulo" est\xE1 destinado a ser un valor vac\xEDo, aseg\xFArese de marcar el esquema como `.nullable()`'),o}},h={length:"${path} debe ser exactamente ${length} caracteres",min:"${path} debe ser al menos ${min} caracteres",max:"${path} debe ser como m\xE1ximo ${max} caracteres",matches:'${path} debe coincidir con lo siguiente: "${regex}"',email:"${path} debe ser un correo electr\xF3nico v\xE1lido",url:"${path} debe ser una URL v\xE1lida",uuid:"${path} debe ser un UUID v\xE1lido",trim:"${path} debe ser una cadena recortada",lowercase:"${path} debe ser una cadena en min\xFAscula",uppercase:"${path} debe ser una cadena de casos superiores"},b={min:"${path} debe ser mayor o igual a ${min}",max:"${path} debe ser menor o igual a ${max}",lessThan:"${path} debe ser menor que ${less}",moreThan:"${path} debe ser mayor que ${more}",positive:"${path} debe ser un n\xFAmero positivo",negative:"${path} debe ser un n\xFAmero negativo",integer:"${path} debe ser un entero"},v={min:"${path} El campo debe ser m\xE1s tarde que ${min}",max:"${path} El campo debe estar antes de ${max}"},g={isValue:"${path} El campo debe ser ${value}"},x={noUnknown:"${path} el campo no puede tener claves no especificadas en la forma del objeto"},f={min:"${path} el campo debe tener al menos ${min} elementos",max:"${path} El campo debe tener menos o igual a los elementos ${max}",length:"${path} debe tener ${length} elementos"},y={__proto__:null,mixed:c,string:h,number:b,date:v,boolean:g,object:x,array:f},E=u(async({router:n,urlPath:e})=>{if(d(y),p.initHttp(n),m.hasAccessToken())try{await $.run()}catch(a){if(!e.startsWith("/login"))return Promise.reject({url:"/login"});throw a}});export{E as default};
