var y=Object.defineProperty;var m=(n,a,e)=>a in n?y(n,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[a]=e;var l=(n,a,e)=>(m(n,typeof a!="symbol"?a+"":a,e),e);import{a as $,b6 as w,r as o,b7 as g}from"./index.d215a0e8.js";const t=class{static fetchAll(a){return t._api.get(`${t._endpoint}`,a)}static fetchById(a){return t._api.get(`${t._endpoint}/${a}`)}static async create(a){await t._api.post(t._endpoint,a)}static async updateExamens(a,e){await t._api.patch(`${t._endpoint}/${a}/examens`,e)}static async registrar(a){await t._api.patch(`${t._endpoint}/${a}/registrar`)}};let c=t;l(c,"_api",$),l(c,"_endpoint","/ordens");const B=w("laboratorio-form",()=>{const n=o(),a=o(),e=o(),s=o(!1),r=o(!1);function d(){n.value=void 0,a.value=void 0,e.value=void 0}function f(i){n.value=i}function v(i){a.value=i}async function p(i){s.value=!0;try{n.value=void 0,n.value=await g.run(i),s.value=!1}catch(u){throw s.value=!1,u}}async function h(i){r.value=!0;try{e.value=void 0,e.value=(await c.fetchById(i)).data().data,r.value=!1}catch(u){throw r.value=!1,u}}return{paciente:n,isPacienteLoading:s,isOrdenLoading:r,ordenesSeleccionada:a,ordenSeleccionada:e,$reset:d,setPaciente:f,fetchOrdenById:h,setOrdenesDelPaciente:v,fetchPaciente:p}});export{c as O,B as u};
