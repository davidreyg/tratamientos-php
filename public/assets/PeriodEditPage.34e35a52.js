import{h as k,m as f,q as b,A as m,z as v,u as r,B as i,C as h,bq as C,aq as S,F as $,ak as D,ar as E}from"./index.8e1e529b.js";import{_ as I}from"./BasePage.2a141dec.js";import{S as B}from"./SkeletonForm.798e33b5.js";import{D as _}from"./datetime.b26a663f.js";import{_ as N}from"./BaseCheckBox.247ce6e4.js";import{_ as q}from"./BaseDatePicker.ea74c138.js";import{u as Q,_ as F,a as x}from"./BaseInput.5767a8ad.js";import{c as L,a as P,f as g,b as T,d as V}from"./index.esm.4940542b.js";import{a as A,u as O}from"./index.1c9af67c.js";import{P as w}from"./PeriodApi.1278f97e.js";import{Q as R}from"./QueryTypes.b72dec59.js";import"./QPage.29776a48.js";import"./QSkeleton.c3a56f41.js";import"./QField.57308312.js";import"./index.005144a5.js";class U{static async run(e){try{return(await w.fetchPeriodById(e)).data().data}catch(t){throw t}}}class J{static async run(e,t){try{await w.updatePeriod(e,t)}catch(o){throw o}}}function M(a,e){const t=async()=>await U.run(a),{data:o,isLoading:l,isSuccess:n,isError:u,isFetching:c,refetch:d}=A([R.PERIODS_ALL,a],t,{enabled:e});return{data:o,isLoading:l,isSuccess:n,isError:u,isFetching:c,refetch:d}}function j(){return O(({data:a,id:e})=>J.run(a,e))}const z={class:"col-6"},G={class:"col-6"},H={class:"col-xs-12 col-md-6"},K=k({__name:"PeriodEditForm",props:{period:{type:Object,required:!0}},emits:["submit","cancel"],setup(a,{emit:e}){const t=e,o=a,l=L().shape({name:P().trim().min(2).required().label("Nombre"),description:P().trim().notRequired().min(2).nullable().transform(s=>s||null).label("Descripci\xF3n"),start_at:g().min(_.now().toISODate()).required().label("Fecha inicio"),end_at:g().min(T("start_at",{map(s){return _.fromJSDate(s).plus({day:1}).toJSDate()}}),"Fecha fin debe ser mayor a la Fecha de  Inicio").required().label("Fecha fin"),is_active:V().required().label("Estado")}),{handleSubmit:n,setErrors:u}=Q({validationSchema:l,initialValues:o.period}),{isLoading:c,mutate:d}=j(),y=n(async s=>{d({data:s,id:o.period.id},{onSuccess:async()=>{t("submit")},onError:p=>{p.data.errors&&u(p.data.errors)}})});return(s,p)=>(f(),b(x,{loading:r(c),onSubmit:r(y),onCancel:p[0]||(p[0]=X=>s.$emit("cancel"))},{actions:m(()=>[v(s.$slots,"actions",{isLoading:r(c)})]),default:m(()=>[i(F,{name:"name",label:"Nombre",required:"",class:"col-12"}),i(F,{name:"description",label:"Description",type:"textarea",class:"col-12"}),h("div",z,[i(q,{required:"",name:"start_at",label:"Fecha de Inicio","min-date":r(_).now()},null,8,["min-date"])]),h("div",G,[i(q,{required:"",name:"end_at",label:"Fecha Fin","min-date":r(_).now()},null,8,["min-date"])]),h("div",H,[i(N,{name:"is_active",label:"Iniciar periodo"})])]),_:3},8,["loading","onSubmit"]))}}),W={class:"row"},pe=k({__name:"PeriodEditPage",props:{id:{type:String,required:!0}},setup(a){const e=a,t=C(),{data:o,isSuccess:l,isFetching:n}=M(e.id,!0),u=()=>{E.success("Periodo registrado correctamente"),t.back()};return(c,d)=>(f(),b(I,{loading:!1,title:"Editar Periodo"},{content:m(()=>[h("div",W,[r(n)?(f(),b(S,{key:0,class:"col-6 q-pa-lg"},{default:m(()=>[i(B,{class:"col-12"})]),_:1})):$("",!0),r(l)&&!r(n)&&r(o)?(f(),b(S,{key:1,class:"my-card col-xs-12 col-sm-8 col-md-6 q-pa-md"},{default:m(()=>[i(D,null,{default:m(()=>[i(K,{period:r(o),onSubmit:u,onCancel:d[0]||(d[0]=y=>c.$router.back())},null,8,["period"])]),_:1})]),_:1})):$("",!0)])]),_:1}))}});export{pe as default};
